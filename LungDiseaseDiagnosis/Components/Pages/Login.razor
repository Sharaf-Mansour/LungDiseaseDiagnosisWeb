@page "/login"
@using System.ComponentModel.DataAnnotations
@using LungDiseaseDiagnosis.Models
@using Microsoft.AspNetCore.Components.Forms
@using LungDiseaseDiagnosis.Brokers.Storages
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using LungDiseaseDiagnosis.Services

@inject NavigationManager NavigationManager
@inject IStorageBroker StorageBroker
@inject ProtectedLocalStorage ProtectedLocalStorage
@inject IUserService UserService

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-5">
            <div class="card-premium p-5">
                <div class="text-center mb-4">
                    <i class="bi bi-box-arrow-in-right text-primary fs-1 mb-3"></i>
                    <h2 class="fw-bold">Medical Professional Login</h2>
                    <p class="text-muted">Access the MedAI diagnostic platform</p>
                </div>

                <EditForm Model="@_model" OnValidSubmit="HandleLogin">
                    <DataAnnotationsValidator />
                    @if (!string.IsNullOrEmpty(_errorMessage))
                    {
                        <div class="alert alert-danger">@_errorMessage</div>
                    }
                    <div class="mb-3">
                        <label for="email" class="form-label fw-medium">
                            <i class="bi bi-envelope"></i> Email Address
                        </label>
                        <InputText @bind-Value="_model.Email" type="email" class="form-control" id="email" />
                        <ValidationMessage For="@(() => _model.Email)" />
                    </div>

                    <div class="mb-4">
                        <label for="password" class="form-label fw-medium">
                            <i class="bi bi-lock"></i> Password
                        </label>
                        <InputText @bind-Value="_model.Password" type="password" class="form-control" id="password" />
                        <ValidationMessage For="@(() => _model.Password)" />
                    </div>

                    <button type="submit" class="btn btn-medical w-100 mb-3">
                        <i class="bi bi-box-arrow-in-right"></i> Sign In
                    </button>
                </EditForm>

                <div class="text-center">
                    <p class="text-muted">Don't have an account?
                        <a href="/signup" class="text-decoration-none fw-medium" style="color: #4facfe;">
                            Register here
                        </a>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel _model = new();
    private string _errorMessage;

    private async Task HandleLogin()
    {
        var user = StorageBroker.SelectAllUsers().FirstOrDefault(u => u.Username == _model.Email && u.Password ==
        _model.Password);

        if (user != null)
        {
            UserService.CurrentUser = user;
            await ProtectedLocalStorage.SetAsync("user", user);
            NavigationManager.NavigateTo("/", forceLoad: false);
        }
        else
        {
            _errorMessage = "Invalid email or password.";
        }
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email address")]
        public string? Email { get; set; }

        [Required(ErrorMessage = "Password is required")]
        public string? Password { get; set; }
    }
}
